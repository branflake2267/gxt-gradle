@def BACKGROUND_COLOR value('theme.panel.backgroundColor');
@def BORDER_COLOR value('theme.panel.border.color');
@def BORDER_STYLE value('theme.panel.border.style');
@def BORDER_WIDTH value('theme.panel.border.toString');
@def TEXT_COLOR value('theme.panel.font.color');
@def FONT_SIZE value('theme.panel.font.size');
@def FONT_FAMILY value('theme.panel.font.family');
@def FONT_WEIGHT value('theme.panel.font.weight');
@def HEADER_LINE_HEIGHT value('theme.panel.headerLineHeight');
@def HEADER_BACKGROUND_COLOR value('theme.panel.headerBackgroundColor');
@def HEADER_GRADIENT value('theme.panel.headerGradient');
@def PADDING value('theme.panel.headerPadding.toString');

.north,
.south,
.east,
.west {
}

.noHeader{
}

.panel {
  outline: 0 none;
  border-style: BORDER_STYLE;
  border-width: BORDER_WIDTH;
  border-color: BORDER_COLOR;
  background: HEADER_BACKGROUND_COLOR;
  /* @alternate */ background: -webkit-linear-gradient(top, HEADER_GRADIENT);
  /* @alternate */ background: -ms-linear-gradient(top, HEADER_GRADIENT);
  /* @alternate */ background: linear-gradient(to bottom, HEADER_GRADIENT);
  padding: PADDING;
}

.north.noHeader.panel,
.south.noHeader.panel {
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 0;
}

.east.noHeader.panel,
.west.noHeader.panel {
  padding-right: 0;
  padding-bottom: 0;
  padding-left: 0;
}

.north .iconWrap,
.south .iconWrap {
  float: right;
  display: table-cell;
}

.north .iconWrap div,
.south .iconWrap div {
  display: inline-block;
  vertical-align: middle;
}

.east .iconWrap div,
.west .iconWrap div {
  margin-left: auto;
  margin-right: auto;
}

.textWrap {
  color: TEXT_COLOR;
  font-size: FONT_SIZE;
  font-weight: FONT_WEIGHT;
  font-family: FONT_FAMILY;
  line-height: HEADER_LINE_HEIGHT;
  text-transform: none;
  white-space: nowrap;
}

.noHeader .textWrap {
  display: none;
}

.west .textWrap,
.east .textWrap {
  padding-left: 10px;
  clear: right;
}

@if (is("gxt.user.agent", "ie8")) {
  .west .textWrap,
  .east .textWrap {
    line-height: 1.2em;
    width: 10000px;
    filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=1);
  }
}
@else {
  .west .textWrap,
  .east .textWrap {
    -webkit-transform: rotate(90deg);
    -moz-transform: rotate(90deg);
    -ms-transform: rotate(90deg);
    transform: rotate(90deg);
  }
}
